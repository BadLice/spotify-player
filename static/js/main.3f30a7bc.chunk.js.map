{"version":3,"sources":["components/login.button.jsx","components/nav.bar.jsx","components/track.play.button.card.jsx","components/track.search.card.jsx","components/page.selector.jsx","components/search.result.list.jsx","App.js","serviceWorker.js","index.js"],"names":["Login","props","Button","onClick","window","location","href","variant","NavBarC","useState","label","value","searchType","setSeatchType","useParams","type","query","offset","search","history","useEffect","q","limit","Navbar","bg","expand","Brand","className","Toggle","aria-controls","Collapse","id","Nav","Form","inline","onSubmit","e","preventDefault","target","searchQuery","trim","length","push","replace","logged","Dropdown","name","onSelect","JSON","parse","Menu","Item","eventKey","stringify","FormControl","placeholder","PlayButton","TrackSearchCard","imageLoading","setImageLoading","track","Card","text","Spinner","animation","style","margin","album","images","width","display","Img","src","url","onLoad","Body","Title","ms","s","m","Math","floor","toFixed","parse_duration","duration_ms","artists","reduce","acc","artist","slice","PageSelector","handleSearch","opt","searchOptions","active","items","number","Pagination","key","disabled","Prev","Next","SearchResultList","Container","Accordion","defaultActiveKey","as","Header","searchResult","tracks","map","next","resultsPerPage","App","_TOKEN","setResult","error","setError","subscribed","options","Object","keys","axios","get","then","data","console","log","catch","err","useSearch","useHistory","path","exact","Boolean","hostname","match","InitApi","token","setToken","useCookies","tokenCookie","access_token","setCookie","start","indexOf","padding","end","substring","maxAge","useToken","React","cloneElement","children","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3f30a7bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Login = props => {\r\n\tconst loginToSpotify = () => {\r\n\t\twindow.location.href =\r\n\t\t\t'https://accounts.spotify.com/authorize?client_id=bee70acc71d645e0aeb3ba505672c35d&response_type=token&redirect_uri=http://localhost:3000';\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button onClick={loginToSpotify} variant='success'>\r\n\t\t\t\tLogin\r\n\t\t\t</Button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n\tNavbar,\r\n\tNav,\r\n\tForm,\r\n\tFormControl,\r\n\tButton,\r\n\tDropdown\r\n} from 'react-bootstrap';\r\nimport LoginButton from './login.button';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst NavBarC = props => {\r\n\tconst [searchType, setSeatchType] = useState({\r\n\t\tlabel: 'Track',\r\n\t\tvalue: 'track'\r\n\t});\r\n\r\n\tconst { type, query, offset } = useParams();\r\n\tconst { search, history } = props;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (type && query && offset) {\r\n\t\t\tsearch({\r\n\t\t\t\tq: query,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tlimit: 9,\r\n\t\t\t\toffset: offset * 9\r\n\t\t\t});\r\n\t\t}\r\n\t}, [type, query, offset, search]);\r\n\r\n\tconst handleSearch = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (e.target.searchQuery.value.trim().length !== 0) {\r\n\t\t\thistory.push(\r\n\t\t\t\t'/search/' +\r\n\t\t\t\t\tsearchType.value +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\te.target.searchQuery.value.trim().replace(' ', '+') +\r\n\t\t\t\t\t'/' +\r\n\t\t\t\t\t0\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleChangeSearchType = type => {\r\n\t\tsetSeatchType(JSON.parse(type));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Navbar bg='dark' expand='lg'>\r\n\t\t\t<Navbar.Brand>\r\n\t\t\t\t<Navbar.Brand className='text-white'>\r\n\t\t\t\t\t<span className='text-success border border-success rounded-pill p-2'>\r\n\t\t\t\t\t\tSpotify\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>Player</span>\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t</Navbar.Brand>\r\n\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\r\n\t\t\t\t<Nav className='mr-auto' />\r\n\t\t\t\t<Form inline onSubmit={handleSearch}>\r\n\t\t\t\t\t{props.logged ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\tname='searchType'\r\n\t\t\t\t\t\t\t\tonSelect={handleChangeSearchType}\r\n\t\t\t\t\t\t\t\tclassName='mr-2'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Dropdown.Toggle\r\n\t\t\t\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\t\t\t\tid='dropdown-basic'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{searchType.label}\r\n\t\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\r\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\teventKey={JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Track',\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'track'\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tTrack\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\teventKey={JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Artist',\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'artist'\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tArtist\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\teventKey={JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Album',\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'album'\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAlbum\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t<Dropdown.Item\r\n\t\t\t\t\t\t\t\t\t\teventKey={JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Playlist',\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'playlist'\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPlaylist\r\n\t\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Search'\r\n\t\t\t\t\t\t\t\tclassName='mr-sm-2'\r\n\t\t\t\t\t\t\t\tname='searchQuery'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button type='submit'>Search</Button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<LoginButton />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form>\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default NavBarC;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst PlayButton = props => {\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tclassName='float-right mb-2 rounded-circle'\r\n\t\t\tvariant='outline-success'\r\n\t\t>\r\n\t\t\t&#x25B6;\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default PlayButton;\r\n","import React, { useState } from 'react';\r\nimport { Card, Spinner } from 'react-bootstrap';\r\nimport ScrollText from 'react-scroll-text';\r\nimport PlayButton from './track.play.button.card';\r\n\r\nconst TrackSearchCard = props => {\r\n\tconst [imageLoading, setImageLoading] = useState(true);\r\n\tif (props.track.type !== 'track') return null;\r\n\r\n\tconst parse_duration = ms => {\r\n\t\tlet s = ms / 1000;\r\n\t\tlet m = Math.floor(s / 60);\r\n\t\ts = s - m * 60;\r\n\r\n\t\tm = m.toFixed(0);\r\n\t\ts = s.toFixed(0);\r\n\r\n\t\treturn m + ':' + s;\r\n\t};\r\n\r\n\tconst handleImageLoaded = () => {\r\n\t\tsetImageLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card\r\n\t\t\t\tclassName='d-inline-block m-2 w-30 h-25 border-success rounded'\r\n\t\t\t\tbg='dark'\r\n\t\t\t\ttext='success'\r\n\t\t\t>\r\n\t\t\t\t<center>\r\n\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\tanimation='grow'\r\n\t\t\t\t\t\tvariant='light'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmargin: props.track.album.images[1].width / 2,\r\n\t\t\t\t\t\t\tdisplay: !imageLoading ? 'none' : 'block'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</center>\r\n\t\t\t\t<Card.Img\r\n\t\t\t\t\tvariant='top'\r\n\t\t\t\t\tsrc={props.track.album.images[1].url}\r\n\t\t\t\t\tonLoad={handleImageLoaded}\r\n\t\t\t\t\tclassName={imageLoading ? 'd-none' : 'd-block'}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>\r\n\t\t\t\t\t\t<ScrollText>{props.track.name}</ScrollText>\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t{/* <Card.Text> */}\r\n\t\t\t\t\t<span className='text-info'>\r\n\t\t\t\t\t\t{parse_duration(props.track.duration_ms)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<ScrollText className='text-white-50'>\r\n\t\t\t\t\t\t{props.track.artists\r\n\t\t\t\t\t\t\t.reduce(\r\n\t\t\t\t\t\t\t\t(acc, artist) => acc + artist.name + ', ',\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.slice(0, -2)}\r\n\t\t\t\t\t</ScrollText>\r\n\t\t\t\t\t{/* </Card.Text> */}\r\n\t\t\t\t\t{/* <Button variant='primary'>Go somewhere</Button> */}\r\n\t\t\t\t\t<PlayButton />\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TrackSearchCard;\r\n","import React from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport { useParams } from 'react-router-dom';\r\nconst PageSelector = props => {\r\n\tconst { type, query } = useParams();\r\n\tconst handleSearch = offset => {\r\n\t\tlet opt = { ...props.searchOptions };\r\n\t\topt.offset = opt.limit * offset;\r\n\t\tprops.history.push('/search/' + type + '/' + query + '/' + offset);\r\n\t};\r\n\r\n\tif (!props.searchOptions) {\r\n\t\treturn <></>;\r\n\t}\r\n\tlet offset = props.searchOptions.offset / props.searchOptions.limit;\r\n\r\n\tlet active = offset + 1;\r\n\tlet items = [];\r\n\tfor (let number = offset + 1 - 2; number <= offset + 1 + 2; number++) {\r\n\t\tnumber > 0\r\n\t\t\t? items.push(\r\n\t\t\t\t\t<Pagination.Item\r\n\t\t\t\t\t\tkey={number}\r\n\t\t\t\t\t\tactive={number === active}\r\n\t\t\t\t\t\tonClick={() => handleSearch(number - 1)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{number}\r\n\t\t\t\t\t</Pagination.Item>\r\n\t\t\t  )\r\n\t\t\t: items.push(\r\n\t\t\t\t\t<Pagination.Item key={number} disabled>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t</Pagination.Item>\r\n\t\t\t  );\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Pagination className='mx-auto' style={{ width: '200px' }}>\r\n\t\t\t<Pagination.Prev\r\n\t\t\t\tdisabled={offset === 0}\r\n\t\t\t\tonClick={() => handleSearch(active - 2)}\r\n\t\t\t/>\r\n\t\t\t{items}\r\n\t\t\t<Pagination.Next onClick={() => handleSearch(active)} />\r\n\t\t</Pagination>\r\n\t);\r\n};\r\n\r\nexport default PageSelector;\r\n","import React from 'react';\r\nimport TrackSearchCard from './track.search.card';\r\nimport { Container, Accordion, Card, Button } from 'react-bootstrap';\r\nimport PageSelector from './page.selector';\r\nconst SearchResultList = props => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container className='pt-2 pb-2'>\r\n\t\t\t\t<Accordion\r\n\t\t\t\t\tdefaultActiveKey='0'\r\n\t\t\t\t\tclassName='mb-2 border-0 rounded-lg'\r\n\t\t\t\t>\r\n\t\t\t\t\t<Card className='mb-2 border-0 text-light rounded-lg'>\r\n\t\t\t\t\t\t<Accordion.Toggle\r\n\t\t\t\t\t\t\tas={Card.Header}\r\n\t\t\t\t\t\t\teventKey='0'\r\n\t\t\t\t\t\t\tclassName='bg-secondary'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tTracks\r\n\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t<Accordion.Collapse eventKey='0' className='border-0'>\r\n\t\t\t\t\t\t\t<Card.Body className='bg-transparent border-0 bg-dark-2'>\r\n\t\t\t\t\t\t\t\t{props.searchResult &&\r\n\t\t\t\t\t\t\t\t\tprops.searchResult.tracks &&\r\n\t\t\t\t\t\t\t\t\tprops.searchResult.tracks.items.map(\r\n\t\t\t\t\t\t\t\t\t\ttrack => (\r\n\t\t\t\t\t\t\t\t\t\t\t<TrackSearchCard\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={track.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrack={track}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Accordion>\r\n\r\n\t\t\t\t{/* <Accordion\r\n\t\t\t\t\tdefaultActiveKey='0'\r\n\t\t\t\t\tclassName='mb-2 border-0 rounded-lg'\r\n\t\t\t\t>\r\n\t\t\t\t\t<Card className='mb-2 border-0 text-light rounded-lg'>\r\n\t\t\t\t\t\t<Accordion.Toggle\r\n\t\t\t\t\t\t\tas={Card.Header}\r\n\t\t\t\t\t\t\teventKey='0'\r\n\t\t\t\t\t\t\tclassName='bg-secondary'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAlbums\r\n\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t<Accordion.Collapse eventKey='0' className='border-0'>\r\n\t\t\t\t\t\t\t<Card.Body className='bg-transparent border-0 bg-dark-2'>\r\n\t\t\t\t\t\t\t\t{props.searchResult &&\r\n\t\t\t\t\t\t\t\t\tprops.searchResult.tracks &&\r\n\t\t\t\t\t\t\t\t\tprops.searchResult.tracks.items.map(\r\n\t\t\t\t\t\t\t\t\t\ttrack => (\r\n\t\t\t\t\t\t\t\t\t\t\t<TrackSearchCard\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={track.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrack={track}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Accordion> */}\r\n\r\n\t\t\t\t<PageSelector\r\n\t\t\t\t\thistory={props.history}\r\n\t\t\t\t\toffset={props.offset}\r\n\t\t\t\t\tnext={props.next}\r\n\t\t\t\t\tresultsPerPage={6}\r\n\t\t\t\t\tsearch={props.search}\r\n\t\t\t\t\tsearchOptions={props.searchOptions}\r\n\t\t\t\t/>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SearchResultList;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport NavBar from './components/nav.bar';\nimport axios from 'axios';\nimport SearchResultList from './components/search.result.list';\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nexport const useSearch = _TOKEN => {\n\tconst [searchResult, setResult] = useState(null);\n\tconst [error, setError] = useState(null);\n\tconst [searchOptions, search] = useState(null);\n\n\tuseEffect(() => {\n\t\tif (searchOptions && _TOKEN) {\n\t\t\tlet subscribed = true;\n\t\t\tlet searchLink = 'https://api.spotify.com/v1/search?';\n\n\t\t\tlet options = Object.keys(searchOptions).reduce(\n\t\t\t\t(opt, key) => opt + '&' + key + '=' + searchOptions[key],\n\t\t\t\t'access_token=' + _TOKEN\n\t\t\t);\n\n\t\t\taxios\n\t\t\t\t.get(searchLink + options)\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tif (subscribed) {\n\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\tsetResult(data);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => setError(err));\n\n\t\t\treturn () => (subscribed = false);\n\t\t}\n\t}, [searchOptions, _TOKEN]);\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}, [error]);\n\n\treturn { searchResult, search, searchOptions, error };\n};\n\nconst App = props => {\n\tconst { searchResult, search, searchOptions } = useSearch(props._TOKEN);\n\n\tconst history = useHistory();\n\n\treturn (\n\t\t<>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t<NavBar\n\t\t\t\t\t\tlogged={props.logged}\n\t\t\t\t\t\tsearch={search}\n\t\t\t\t\t\thistory={history}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\n\t\t\t\t<Route path='/search/:type/:query/:offset' exact>\n\t\t\t\t\t<NavBar\n\t\t\t\t\t\tlogged={props.logged}\n\t\t\t\t\t\tsearch={search}\n\t\t\t\t\t\thistory={history}\n\t\t\t\t\t/>\n\t\t\t\t\t<SearchResultList\n\t\t\t\t\t\tsearchResult={searchResult}\n\t\t\t\t\t\tsearch={search}\n\t\t\t\t\t\tsearchOptions={searchOptions}\n\t\t\t\t\t\thistory={history}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\n\t\t\t\t<Route>\n\t\t\t\t\t<p className='text-white'>NOT FOUND</p>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\n\nconst InitApi = props => {\n\tconst useToken = () => {\n\t\tconst [token, setToken] = useState(null);\n\t\tconst [{ access_token: tokenCookie }, setCookie] = useCookies([\n\t\t\t'access_token'\n\t\t]);\n\n\t\tuseEffect(() => {\n\t\t\tif (!token) {\n\t\t\t\tif (tokenCookie) {\n\t\t\t\t\t//get previous access_token\n\t\t\t\t\tsetToken(tokenCookie);\n\t\t\t\t} else {\n\t\t\t\t\t//get access_token from url query string\n\t\t\t\t\tlet url = window.location.href;\n\t\t\t\t\tlet start = url.indexOf('access_token=');\n\t\t\t\t\tlet padding = 'access_token='.length;\n\t\t\t\t\tlet end = url.indexOf('&token_type');\n\t\t\t\t\tif (start !== -1 && end !== -1) {\n\t\t\t\t\t\tlet token = url.substring(start + padding, end);\n\t\t\t\t\t\tsetToken(token);\n\t\t\t\t\t\tsetCookie('access_token', token, { maxAge: 3600 });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, [setCookie, token, tokenCookie]);\n\n\t\treturn token;\n\t};\n\n\tlet token = useToken();\n\tlet children = React.cloneElement(props.children, {\n\t\tlogged: !!token,\n\t\t_TOKEN: token\n\t});\n\n\treturn children;\n};\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<InitApi>\n\t\t\t<App logged={!!false} />\n\t\t</InitApi>\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}